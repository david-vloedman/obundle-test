{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","navigate","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","activateTab","searchData","url","count","urlUtils","replaceParams","page","goToUrl","showContent","$tabToActivate","find","each","idx","tab","$tab","is","removeAttr","attr","onTabChangeWithArrows","event","eventKey","which","$tabsCollection","index","document","activeElement","nextTabIdx","$activeTab","activeTabIdx","lastTabIdx","length","get","focus","trigger","onReady","compareProducts","context","arrangeFocusOnSortBy","$searchForm","$categoryTreeContainer","Url","parse","window","location","href","treeData","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","preventDefault","query","section","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","categoryId","input","type","name","value","append","$searchResultsMessage","searchResultsCount","prependTo","setTimeout","loadTreeNodes","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","themes","icons","checkbox","three_state","plugins","onMinPriceError","onMaxPriceError","minPriceNotEntered","maxPriceNotEntered","onInvalidPrice","$contentListingContainer","$searchHeading","$searchCount","$contentCount","requestOptions","template","productListing","contentListing","sidebar","heading","productCount","contentCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","validationErrorMessages","$form","nod","submit","tap","announceInputErrorMessage","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","updateCounterNav","counter","$link","urls","compare","join","noCompareMessage","compareCounter","$compareLink","$checked","map","element","item","product","currentTarget","$clickedCompareLink","checked","indexOf","splice","decrementCounter","showAlertModal","console","log","addEventListener","localStorage","setItem","$sortBySelector","getItem","removeItem","queryParams","serialize","split","format","pathname","search","buildQueryString","PageManager","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","callback","options","collapsedFacets","collapsedFacetItems","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","getUrl","err","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","params","list_all","response","open","updateContent","$items","val","toLowerCase","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","selectors","errorSelector","fieldsetSelector","formSelector","maxPriceSelector","minPriceSelector","Validators","setMinMaxPriceValidation","priceRangeValidator","unbindEvents","onPopState","off","stopPropagation","$toggle","toggleClass","urlQueryParams","Object","assign","constants","VALID","decodeURI","key","parseQueryParams","hasOwnProperty","currentUrl","URLSearchParams","has","updatedLinkUrl","replace","history","replaceState","title"],"mappings":"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","file":"theme-bundle.chunk.11.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport FacetedSearch from './common/faceted-search';\nimport { announceInputErrorMessage } from './common/utils/form-utils';\nimport compareProducts from './global/compare-products';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\n\nconst leftArrowKey = 37;\nconst rightArrowKey = 39;\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts(navigate = true) {\n        this.$productListingContainer.removeClass('u-hidden');\n        this.$facetedSearchContainer.removeClass('u-hidden');\n        this.$contentResultsContainer.addClass('u-hidden');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-product-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-product-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    showContent(navigate = true) {\n        this.$contentResultsContainer.removeClass('u-hidden');\n        this.$productListingContainer.addClass('u-hidden');\n        this.$facetedSearchContainer.addClass('u-hidden');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-content-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-content-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    activateTab($tabToActivate) {\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        $tabsCollection.each((idx, tab) => {\n            const $tab = $(tab);\n\n            if ($tab.is($tabToActivate)) {\n                $tab.removeAttr('tabindex');\n                $tab.attr('aria-selected', true);\n                return;\n            }\n\n            $tab.attr('tabindex', '-1');\n            $tab.attr('aria-selected', false);\n        });\n    }\n\n    onTabChangeWithArrows(event) {\n        const eventKey = event.which;\n        const isLeftOrRightArrowKeydown = eventKey === leftArrowKey\n            || eventKey === rightArrowKey;\n        if (!isLeftOrRightArrowKeydown) return;\n\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        const isActiveElementNotTab = $tabsCollection.index($(document.activeElement)) === -1;\n        if (isActiveElementNotTab) return;\n\n        const $activeTab = $(`#${document.activeElement.id}`);\n        const activeTabIdx = $tabsCollection.index($activeTab);\n        const lastTabIdx = $tabsCollection.length - 1;\n\n        let nextTabIdx;\n        switch (eventKey) {\n        case leftArrowKey:\n            nextTabIdx = activeTabIdx === 0 ? lastTabIdx : activeTabIdx - 1;\n            break;\n        case rightArrowKey:\n            nextTabIdx = activeTabIdx === lastTabIdx ? 0 : activeTabIdx + 1;\n            break;\n        default: break;\n        }\n\n        $($tabsCollection.get(nextTabIdx)).focus().trigger('click');\n    }\n\n    onReady() {\n        compareProducts(this.context);\n        this.arrangeFocusOnSortBy();\n\n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$contentResultsContainer = $('#search-results-content');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        $('[data-search-page-tabs]').on('keyup', this.onTabChangeWithArrows);\n\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\n            this.showContent(false);\n        } else {\n            this.showProducts(false);\n        }\n\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n\n        const $searchResultsMessage = $(`<p\n            class=\"aria-description--hidden\"\n            tabindex=\"-1\"\n            role=\"status\"\n            aria-live=\"polite\"\n            >${this.context.searchResultsCount}</p>`)\n            .prependTo('body');\n\n        setTimeout(() => $searchResultsMessage.focus(), 100);\n    }\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        // eslint-disable-next-line object-curly-newline\n        const { onMinPriceError, onMaxPriceError, minPriceNotEntered, maxPriceNotEntered, onInvalidPrice } = this.context;\n        const $productListingContainer = $('#product-listing-container');\n        const $contentListingContainer = $('#search-results-content');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const $contentCount = $('#search-results-content-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'search/product-listing',\n                contentListing: 'search/content-listing',\n                sidebar: 'search/sidebar',\n                heading: 'search/heading',\n                productCount: 'search/product-count',\n                contentCount: 'search/content-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $searchHeading.html(content.heading);\n\n            const url = Url.parse(window.location.href, true);\n            if (url.query.section === 'content') {\n                $contentListingContainer.html(content.contentListing);\n                $contentCount.html(content.contentCount);\n                this.showContent(false);\n            } else {\n                $productListingContainer.html(content.productListing);\n                $facetedSearchContainer.html(content.sidebar);\n                $searchCount.html(content.productCount);\n                this.showProducts(false);\n            }\n\n            $('body').triggerHandler('compareReset');\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        }, {\n            validationErrorMessages: {\n                onMinPriceError,\n                onMaxPriceError,\n                minPriceNotEntered,\n                maxPriceNotEntered,\n                onInvalidPrice,\n            },\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n            tap: announceInputErrorMessage,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n}\n","import { showAlertModal } from './modal';\n\nfunction decrementCounter(counter, item) {\n    const index = counter.indexOf(item);\n\n    if (index > -1) {\n        counter.splice(index, 1);\n    }\n}\n\nfunction incrementCounter(counter, item) {\n    counter.push(item);\n}\n\nfunction updateCounterNav(counter, $link, urls) {\n    if (counter.length !== 0) {\n        if (!$link.is('visible')) {\n            $link.addClass('show');\n        }\n        $link.attr('href', `${urls.compare}/${counter.join('/')}`);\n        $link.find('span.countPill').html(counter.length);\n    } else {\n        $link.removeClass('show');\n    }\n}\n\nexport default function ({ noCompareMessage, urls }) {\n    let compareCounter = [];\n\n    const $compareLink = $('a[data-compare-nav]');\n\n    $('body').on('compareReset', () => {\n        const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        compareCounter = $checked.length ? $checked.map((index, element) => element.value).get() : [];\n        updateCounterNav(compareCounter, $compareLink, urls);\n    });\n\n    $('body').triggerHandler('compareReset');\n\n    $('body').on('click', '[data-compare-id]', event => {\n        const product = event.currentTarget.value;\n        const $clickedCompareLink = $('a[data-compare-nav]');\n\n        if (event.currentTarget.checked) {\n            incrementCounter(compareCounter, product);\n        } else {\n            decrementCounter(compareCounter, product);\n        }\n\n        updateCounterNav(compareCounter, $clickedCompareLink, urls);\n    });\n\n    $('body').on('submit', '[data-product-compare]', event => {\n        const $this = $(event.currentTarget);\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\n\n        if (productsToCompare.length <= 1) {\n            showAlertModal(noCompareMessage);\n            event.preventDefault();\n        }\n    });\n\n    $('body').on('click', 'a[data-compare-nav]', () => {\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        if ($clickedCheckedInput.length <= 1) {\n            showAlertModal(noCompareMessage);\n            return false;\n        }\n    });\n}\n","import PageManager from './page-manager';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    constructor(context) {\n        super(context);\n        console.log(context)\n        window.addEventListener('beforeunload', () => {\n            if (document.activeElement.id === 'sort') {\n                window.localStorage.setItem('sortByStatus', 'selected');\n            }\n        });\n    }\n\n    arrangeFocusOnSortBy() {\n        const $sortBySelector = $('[data-sort-by=\"product\"] #sort');\n\n        if (window.localStorage.getItem('sortByStatus')) {\n            $sortBySelector.focus();\n            window.localStorage.removeItem('sortByStatus');\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './utils/url-utils';\nimport modalFactory from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './utils/form-utils';\nimport nod from './nod';\n\n\nconst defaultOptions = {\n    accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n    blockerSelector: '#facetedSearch .blocker',\n    clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n    componentSelector: '#facetedSearch-navList',\n    facetNavListSelector: '#facetedSearch .navList',\n    priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n    priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n    priceRangeFormSelector: '#facet-range-form',\n    priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n    priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n    showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n    facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n    modal: modalFactory('#modal')[0],\n    modalOpen: false,\n};\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (_.includes(this.collapsedFacetItems, id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors, this.options.validationErrorMessages);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(window).on('popstate', this.onPopState);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(window).off('popstate', this.onPopState);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event, currentTarget) {\n        const $link = $(currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onRangeSubmit(event, currentTarget) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href, true);\n        let queryParams = decodeURI($(currentTarget).serialize()).split('&');\n        queryParams = urlUtils.parseQueryParams(queryParams);\n\n        for (const key in queryParams) {\n            if (queryParams.hasOwnProperty(key)) {\n                url.query[key] = queryParams[key];\n            }\n        }\n\n        // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n        const urlQueryParams = {};\n        Object.assign(urlQueryParams, url.query);\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(urlQueryParams) }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n\n    onPopState() {\n        const currentUrl = window.location.href;\n        const searchParams = new URLSearchParams(currentUrl);\n        // If searchParams does not contain a page value then modify url query string to have page=1\n        if (!searchParams.has('page')) {\n            const linkUrl = $('.pagination-link').attr('href');\n            const re = /page=[0-9]+/i;\n            const updatedLinkUrl = linkUrl.replace(re, 'page=1');\n            window.history.replaceState({}, document.title, updatedLinkUrl);\n        }\n        $(window).trigger('statechange');\n    }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}